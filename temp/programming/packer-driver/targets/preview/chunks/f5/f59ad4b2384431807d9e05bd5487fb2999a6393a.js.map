{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/cocos-observer/assets/Cell.ts"],"names":["_decorator","Component","ColorProvider","EventSystem","Events","ccclass","Cell","type","init","getInstance","changeColor","node","registerEvents","on","PerformAction","onPerformAction","bind","actionType","console","log","name","onDestroy","off"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;OACH;AAAEC,QAAAA;AAAF,O,GAAcL,U;;sBAGPM,I,WADZD,OAAO,CAAC,MAAD,C,gBAAR,MACaC,IADb,SAC0BL,SAD1B,CACoC;AAAA;AAAA;AAAA,eACzBM,IADyB,GACV,CADU;AAAA;;AAGzBC,QAAAA,IAAI,CAACD,IAAD,EAAe;AACtB,eAAKA,IAAL,GAAYA,IAAZ;AACA;AAAA;AAAA,8CAAcE,WAAd,GAA4BC,WAA5B,CAAwCH,IAAxC,EAA8C,KAAKI,IAAnD;AACA,eAAKC,cAAL;AACH;;AAEOA,QAAAA,cAAc,GAAG;AACrB;AAAA;AAAA,0CAAYH,WAAZ,GAA0BI,EAA1B,CAA6B;AAAA;AAAA,gCAAOC,aAApC,EAAmD,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAnD,EAAoF,IAApF;AACH;;AAEOD,QAAAA,eAAe,CAACE,UAAD,EAAqB;AACxCC,UAAAA,OAAO,CAACC,GAAR,cAAuB,KAAKR,IAAL,CAAUS,IAAjC,4BAA4DH,UAA5D;AACH;;AAEDI,QAAAA,SAAS,GAAG;AACR;AAAA;AAAA,0CAAYZ,WAAZ,GAA0Ba,GAA1B,CAA8B;AAAA;AAAA,gCAAOR,aAArC,EAAoD,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAApD,EAAqF,IAArF;AACH;;AAnB+B,O","sourcesContent":["import { _decorator, Component, Node, Sprite } from 'cc';\nimport { ColorProvider } from './ColorProvider';\nimport { EventSystem } from './EventSystem';\nimport { Events } from './Events';\nconst { ccclass } = _decorator;\n\n@ccclass('Cell')\nexport class Cell extends Component {\n    public type: number = 0;\n\n    public init(type: number) {\n        this.type = type;\n        ColorProvider.getInstance().changeColor(type, this.node);\n        this.registerEvents();\n    }\n\n    private registerEvents() {\n        EventSystem.getInstance().on(Events.PerformAction, this.onPerformAction.bind(this), this);\n    }\n\n    private onPerformAction(actionType: string) {\n        console.log(`Cell at ${this.node.name} performing action: ${actionType}`);\n    }\n\n    onDestroy() {\n        EventSystem.getInstance().off(Events.PerformAction, this.onPerformAction.bind(this), this);\n    }\n}\n"]}