{"version":3,"sources":["file:///C:/Users/maide/OneDrive/Documents/GitHub/cocos-observer/assets/GridManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","UITransform","ccclass","property","GridManager","start","createGrid","cellPrefab","parentNode","console","error","cellSize","data","getComponent","contentSize","startX","gridSize","width","cellSpacing","startY","height","row","col","cellNode","posX","posY","setPosition","addChild"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;;;;;;;;;OAC3D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;6BAGjBS,W,WADZF,OAAO,CAAC,aAAD,C,UAEHC,QAAQ,CAACL,MAAD,C,UAGRK,QAAQ,CAACN,IAAD,C,2BALb,MACaO,WADb,SACiCR,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAavCS,QAAAA,KAAK,GAAG;AACJ,eAAKC,UAAL;AACH;;AAEOA,QAAAA,UAAU,GAAG;AACjB,cAAI,CAAC,KAAKC,UAAN,IAAoB,CAAC,KAAKC,UAA9B,EAA0C;AACtCC,YAAAA,OAAO,CAACC,KAAR,CAAc,0CAAd;AACA;AACH;;AAED,cAAMC,QAAQ,GAAG,KAAKJ,UAAL,CAAgBK,IAAhB,CAAqBC,YAArB,CAAkCZ,WAAlC,EAA+Ca,WAAhE;AACA,cAAMC,MAAM,GAAG,EAAE,CAAC,KAAKC,QAAL,GAAgB,CAAjB,KAAuBL,QAAQ,CAACM,KAAT,GAAiB,KAAKC,WAA7C,CAAF,IAA+D,CAA9E;AACA,cAAMC,MAAM,GAAG,EAAE,CAAC,KAAKH,QAAL,GAAgB,CAAjB,KAAuBL,QAAQ,CAACS,MAAT,GAAkB,KAAKF,WAA9C,CAAF,IAAgE,CAA/E;;AAEA,eAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKL,QAA7B,EAAuCK,GAAG,EAA1C,EAA8C;AAC1C,iBAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKN,QAA7B,EAAuCM,GAAG,EAA1C,EAA8C;AAC1C,kBAAMC,QAAQ,GAAGxB,WAAW,CAAC,KAAKQ,UAAN,CAA5B;AACA,kBAAMiB,IAAI,GAAGT,MAAM,GAAGO,GAAG,IAAIX,QAAQ,CAACM,KAAT,GAAiB,KAAKC,WAA1B,CAAzB;AACA,kBAAMO,IAAI,GAAGN,MAAM,GAAGE,GAAG,IAAIV,QAAQ,CAACS,MAAT,GAAkB,KAAKF,WAA3B,CAAzB;AAEAK,cAAAA,QAAQ,CAACG,WAAT,CAAqB,IAAI1B,IAAJ,CAASwB,IAAT,EAAeC,IAAf,EAAqB,CAArB,CAArB;AACA,mBAAKjB,UAAL,CAAgBmB,QAAhB,CAAyBJ,QAAzB;AACH;AACJ;AACJ;;AArCsC,O;;;;;iBAEX,I;;;;;;;iBAGF,I;;mFAEzBpB,Q;;;;;iBACyB,C;;sFAEzBA,Q;;;;;iBAC4B,E","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, UITransform } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GridManager')\nexport class GridManager extends Component {\n    @property(Prefab)\n    public cellPrefab: Prefab = null;\n\n    @property(Node)\n    public parentNode: Node = null;\n\n    @property\n    public gridSize: number = 5;\n\n    @property\n    public cellSpacing: number = 10; \n\n    start() {\n        this.createGrid();\n    }\n\n    private createGrid() {\n        if (!this.cellPrefab || !this.parentNode) {\n            console.error('where the fuck is parent and cellPrefab?');\n            return;\n        }\n\n        const cellSize = this.cellPrefab.data.getComponent(UITransform).contentSize; \n        const startX = -((this.gridSize - 1) * (cellSize.width + this.cellSpacing)) / 2;\n        const startY = -((this.gridSize - 1) * (cellSize.height + this.cellSpacing)) / 2;\n\n        for (let row = 0; row < this.gridSize; row++) {\n            for (let col = 0; col < this.gridSize; col++) {\n                const cellNode = instantiate(this.cellPrefab);\n                const posX = startX + col * (cellSize.width + this.cellSpacing);\n                const posY = startY + row * (cellSize.height + this.cellSpacing);\n\n                cellNode.setPosition(new Vec3(posX, posY, 0));\n                this.parentNode.addChild(cellNode);\n            }\n        }\n    }\n}\n"]}